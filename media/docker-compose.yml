
services:
    gluetun:
        image: qmcgaw/gluetun
        container_name: gluetun

        networks:
            - traefik

        cap_add:
            - NET_ADMIN

        devices:
            - /dev/net/tun:/dev/net/tun

        env_file:
            - .env

        volumes:
            - ./data/gluetun:/gluetun

        healthcheck:
            interval: 10s
            timeout: 60s
            start_period: 10s
            retries: 3
            test: [ "CMD", "/gluetun-entrypoint", "healthcheck" ]

        labels:
            diun.enable: true
            traefik.enable: true
            traefik.http.routers.transmission.entrypoints: https
            traefik.http.routers.transmission.rule: Host(`qbit.domain.com`)
            traefik.http.routers.transmission.service: transmission
            traefik.http.routers.transmission.middlewares: authelia@docker
            traefik.http.services.transmission.loadbalancer.server.port: 9091
        
            traefik.http.routers.radarr.entrypoints: https
            traefik.http.routers.radarr.rule: Host(`radarr.domain.com`)
            traefik.http.routers.radarr.service: radarr
            traefik.http.routers.radarr.middlewares: authelia@docker
            traefik.http.services.radarr.loadbalancer.server.port: 7878

            traefik.http.routers.sonarr.entrypoints: https
            traefik.http.routers.sonarr.rule: Host(`sonarr.domain.com`)
            traefik.http.routers.sonarr.service: sonarr
            traefik.http.routers.sonarr.middlewares: authelia@docker
            traefik.http.services.sonarr.loadbalancer.server.port: 8989

            traefik.http.routers.bazarr.entrypoints: https
            traefik.http.routers.bazarr.rule: Host(`bazarr.domain.com`)
            traefik.http.routers.bazarr.service: bazarr
            traefik.http.routers.bazarr.middlewares: authelia@docker
            traefik.http.services.bazarr.loadbalancer.server.port: 6767

            traefik.http.routers.prowlarr.entrypoints: https
            traefik.http.routers.prowlarr.rule: Host(`prowlarr.domain.com`)
            traefik.http.routers.prowlarr.service: prowlarr
            traefik.http.routers.prowlarr.middlewares: authelia@docker
            traefik.http.services.prowlarr.loadbalancer.server.port: 9696

            traefik.http.routers.profilarr.entrypoints: https
            traefik.http.routers.profilarr.rule: Host(`profilarr.domain.com`)
            traefik.http.routers.profilarr.service: profilarr
            traefik.http.routers.profilarr.middlewares: authelia@docker
            traefik.http.services.profilarr.loadbalancer.server.port: 6868

            traefik.http.routers.huntarr.entrypoints: https
            traefik.http.routers.huntarr.rule: Host(`huntarr.domain.com`)
            traefik.http.routers.huntarr.service: huntarr
            traefik.http.routers.huntarr.middlewares: authelia@docker
            traefik.http.services.huntarr.loadbalancer.server.port: 9705


    flaresolverr:
        image: ghcr.io/flaresolverr/flaresolverr:latest
        container_name: flaresolverr
        restart: unless-stopped

        network_mode: service:gluetun

        environment:
            - LOG_LEVEL=info

        labels:
            diun.enable: true

    transmission:
        image: lscr.io/linuxserver/transmission:latest
        container_name: transmission
        restart: unless-stopped

        network_mode: service:gluetun

        depends_on: 
            gluetun:
                condition: service_healthy

            flaresolverr:
                condition: service_started

        env_file:
            - .env

        volumes:
            - ./data/transmission:/config
            - /mnt/tank/media/torrents:/media/torrents

        labels:
            diun.enable: true

    prowlarr:
        image: ghcr.io/hotio/prowlarr:latest
        container_name: prowlarr

        network_mode: service:gluetun

        depends_on: 
            - transmission

        env_file:
            - .env

        volumes:
            - ./data/prowlarr:/config

        restart: unless-stopped

        labels:
            diun.enable: true

    radarr:
        image: ghcr.io/hotio/radarr:latest
        container_name: radarr

        network_mode: service:gluetun

        depends_on: 
            - prowlarr

        env_file:
            - .env

        volumes:
            - ./data/radarr:/config
            - /mnt/tank/media:/media
    
        labels:
            diun.enable: true

    sonarr:
        image: ghcr.io/hotio/sonarr:latest
        container_name: sonarr

        network_mode: service:gluetun

        depends_on: 
            - prowlarr

        env_file:
            - .env

        volumes:
            - ./data/sonarr:/config
            - /mnt/tank/media:/media

        labels:
            diun.enable: true

    bazarr:
        image: ghcr.io/hotio/bazarr:latest
        container_name: bazarr

        network_mode: service:gluetun

        depends_on: 
            - prowlarr

        env_file:
            - .env

        volumes:
            - ./data/bazarr/config:/config
            - /mnt/tank/media:/data

        labels:
            diun.enable: true

    jellyfin:
        image: ghcr.io/hotio/jellyfin:latest
        container_name: jellyfin

        volumes:
            - ./data/jellyfin:/config
            - /mnt/tank/media/links:/media

        networks:
            - traefik
        
        env_file:
            - .env

        labels:
            diun.enable: true
            traefik.enable: true
            traefik.http.routers.jellyfin.entrypoints: https
            traefik.http.routers.jellyfin.rule: Host(`jellyfin.domain.com`)
            traefik.http.services.jellyfin.loadbalancer.server.port: 8096

    jellyseerr:
        image: ghcr.io/hotio/jellyseerr:latest
        container_name: jellyseerr

        volumes:
            - ./data/jellyseerr:/config

        networks:
            - traefik
        
        env_file:
            - .env

        labels:
            diun.enable: true
            traefik.enable: true
            traefik.http.routers.jellyseerr.entrypoints: https
            traefik.http.routers.jellyseerr.rule: Host(`jellyseerr.domain.com`)
            traefik.http.services.jellyseerr.loadbalancer.server.port: 5055

    huntarr:
        image: ghcr.io/plexguide/huntarr:latest
        container_name: huntarr
        restart: always

        network_mode: service:gluetun

        depends_on: 
            - radarr
            - sonarr

        volumes:
            - ./data/huntarr:/config

        environment:
            - TZ=America/New_York
    
    profilarr:
        image: santiagosayshey/profilarr:latest 
        container_name: profilarr

        network_mode: service:gluetun

        volumes:
            - ./data/profilarr:/config 

        env_file:
            - .env

        restart: unless-stopped



    bitplay:
        image: ghcr.io/aculix/bitplay:main
        restart: unless-stopped
        container_name: bitplay

        volumes:
            - ./data/bitplay:/app/config 

        network_mode: service:gluetun

        labels:
            diun.enable: true
            traefik.enable: true
            traefik.http.routers.bitplay.entrypoints: https
            traefik.http.routers.bitplay.rule: Host(`bitplay.domain.com`)
            traefik.http.services.bitplay.loadbalancer.server.port: 3347
networks:
    media:
        name: media
    traefik:
        external: true

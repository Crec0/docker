
services:
    zipline-db:
        image: postgres:16
        container_name: zipline-db
        restart: unless-stopped

        env_file:
            - .env

        volumes:
            - /mnt/tank/docker/zipline/postgres:/var/lib/postgresql/data

        networks:
            - zipline
            - bytebase

        healthcheck:
            test: [ 'CMD-SHELL', 'pg_isready -U postgres' ]
            interval: 10s
            timeout: 5s
            retries: 5

    zipline:
        image: ghcr.io/diced/zipline:latest
        container_name: zipline
        restart: unless-stopped

        env_file:
            - .env

        depends_on:
            zipline-db:
                condition: service_healthy

        networks:
            - traefik
            - minio
            - zipline

        labels:
            diun.enable: true
            traefik.enable: true
            traefik.http.routers.zipline.rule: Host(`zipline.domain.com`)
            traefik.http.routers.zipline.entrypoints: https
            traefik.http.services.zipline.loadbalancer.server.port: 3000

networks:
    zipline:
        name: zipline
    bytebase:
        external: true
    minio:
        external: true
    traefik:
        external: true
